#!/bin/bash
# WARNING: this script will destroy all data on the selected disk.

set -u -o pipefail -o errtrace +o history
set_err_trap() {
  trap 's=$?; echo "$0: Error on line "$LINENO": $BASH_COMMAND"; exit $s' ERR
}
unset_err_trap() {
  trap - ERR
}
set_err_trap

SCRIPT=`realpath "$0"`
SCRIPTPATH=`dirname "$SCRIPT"`

### Set up logging ###
exec 1> >(tee "/tmp/stdout.log")
exec 2> >(tee "/tmp/stderr.log")

retry() {
  unset_err_trap
  local -r -i max="$1"; shift
  local -i num=1
  $@
  local rc=$?
  while [ $rc -ne 0 ] && [ $num -lt $max ]; do
    echo "attempt #$num failed."
    sleep $((num++))
    $@
    local rc=$?
  done
  set_err_trap
  return $rc
}
pacman_need() {
  retry 3 sudo pacman -S --needed --noconfirm --color=auto $@
}

# initialize user
USER="$(id -un)"
if [ "$EUID" -eq 0 ]; then
  echo >&2 "Please don't run the script as root"
  exit 1
else
  echo "Running as current user '$USER'"
fi

sudo tee /etc/hostname <<EOF
pxeserver
EOF

pacman_need syslinux nfs-utils tftp-hpa

sudo /usr/bin/rm /etc/systemd/network/20-wired.network
sudo tee /etc/systemd/network/20-extern.network <<EOF
[Match]
Name=enp0s3

[Network]
DHCP=yes

[DHCPv4]
RouteMetric=10

[IPv6AcceptRA]
RouteMetric=10
EOF
sudo tee /etc/systemd/network/20-intern.network <<EOF
[Match]
Name=enp0s8

[Network]
Address=192.168.123.1/24
DHCPServer=true
IPMasquerade=ipv4

[DHCPServer]
PoolOffset=100
PoolSize=100
EmitDNS=yes
EmitNTP=yes
EmitRouter=yes
EmitTimezone=yes
BootServerAddress=192.168.123.1
BootFilename=pxelinux.0
EOF

if [ ! -d /srv/tftp ]; then
  sudo mkdir /srv/tftp
fi
sudo cp -a /usr/lib/syslinux/bios/*.c32 /srv/tftp/
sudo cp -a /usr/lib/syslinux/bios/pxelinux.0 /srv/tftp/
sudo cp -a /usr/lib/syslinux/bios/memdisk /srv/tftp/
sudo mkdir /srv/tftp/pxelinux.cfg
sudo tee /srv/tftp/pxelinux.cfg/default <<EOF
DEFAULT arch
LABEL arch
LINUX arch/x86_64/vmlinuz-linux
INITRD arch/intel-ucode.img,arch/amd-ucode.img,arch/x86_64/initramfs-linux.img
APPEND archiso_nfs_srv=\${pxeserver}:/srv/nfs archisobasedir=arch copytoram=n cow_spacesize=80%
IPAPPEND 3
EOF
sudo mkdir -p /srv/tftp/arch/x86_64

if [ ! -d /srv/nfs ]; then
  sudo mkdir /srv/nfs
fi
sudo mkdir -p /srv/nfs/arch/x86_64

sudo tee /etc/exports <<EOF
/srv/nfs    192.168.123.0/255.255.255.0(root_squash,insecure,ro)
EOF

sudo chown -R root:root /srv/tftp /srv/nfs
sudo find /srv/tftp /srv/nfs -type d -exec chmod 755 {} \;
sudo find /srv/tftp /srv/nfs -type f -exec chmod 644 {} \;

sudo systemctl enable nfs-server tftpd.service
